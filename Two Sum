Two Sum
100
Easy
Given an array of integers nums and an integer target. Return the indices(0 - indexed) of two elements in nums such that they add up to target.
Each input will have exactly one solution, and the same element cannot be used twice. Return the answer in increasing order.


Examples:

Input: nums = [1, 6, 2, 10, 3], target = 7
Output: [0, 1]
Explanation:
nums[0] + nums[1] = 1 + 6 = 7

Input: nums = [1, 3, 5, -7, 6, -3], target = 0
Output: [1, 5]
Explanation:
nums[1] + nums[5] = 3 + (-3) = 0
-----------------------------------------------------------------------
class Solution {
  public int[] twoSum(int[] nums, int target) {
    int N = nums.length;
    HashMap<Integer, Integer> map = new HashMap<>();
    int[] arr = new int[2];
    arr[0] = arr[1] = -1;
    for (int i = 0; i < N; i++) {
      int num = nums[i];
      int check = target - num;
      if (map.containsKey(check)) {
        arr[0] = map.get(check);
        arr[1] = i;
        return arr;
      }
      map.put(nums[i], i);
    }
    return arr;
  }
}
